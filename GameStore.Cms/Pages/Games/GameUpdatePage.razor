@inherits BaseDialog

@inject GameService GameService
@inject CategoryODataService CategoryODataService

<AuthorizeArea Policy="@Policies.Game">
    <Loading IsLoading="IsLoading">
        @if (UpdateGameModel != null)
        {
            <EditForm Model="UpdateGameModel" OnValidSubmit="SaveAsync">
                <DataAnnotationsValidator />

                <div class="row mb-2">
                    <div class="col-md-2">
                        <RadzenLabel Text="Oyun Adı:" />
                    </div>
                    <div class="col-md-10">
                        <RadzenTextBox class="w-100" @bind-Value="UpdateGameModel.Name" />
                        <ValidationMessage For="() => UpdateGameModel.Name" />
                    </div>
                </div>

                <div class="row mb-2">
                    <div class="col-md-2">
                        <RadzenLabel Text="Kategori:" />
                    </div>
                    <div class="col-md-10">
                        <RadzenDropDown Data="categories"
                                        TValue="Guid"
                                        @bind-Value="UpdateGameModel.CategoryId"
                                        TextProperty="Value"
                                        ValueProperty="Key"
                                        class="w-100" />
                        <ValidationMessage For="() => UpdateGameModel.CategoryId" />
                    </div>
                </div>

                <div class="row mb-2">
                    <div class="col-md-2 align-items-center d-flex">
                        <RadzenLabel Text="Kapak Resmi:" />
                    </div>
                    <div class="col-md-10">
                        <RadzenButton Text="Resim Seç" Click=@OpenFileDialogAsync />
                        @if (UpdateGameModel.CoverImage != null)
                        {
                            @*<RadzenLink Icon="preview" Target="_blank" Path="@($"{Configuration.CoreConfiguration.StorageAPIPath}{UpdateGameModel.CoverImage.Path}")" />*@
                            <RadzenLabel Text="@UpdateGameModel.CoverImage.Name" />
                        }
                        <ValidationMessage For="() => UpdateGameModel.CoverImage" />
                    </div>
                </div>

                <div class="row mb-2">
                    <div class="col-md-2">
                        <RadzenLabel Text="Fiyat:" />
                    </div>
                    <div class="col-md-10">
                        <RadzenNumeric class="w-100" TValue="decimal" @bind-Value="UpdateGameModel.Price" />
                        <ValidationMessage For="() => UpdateGameModel.Price" />
                    </div>
                </div>

                <div class="row mb-2">
                    <div class="col-md-2">
                        <RadzenLabel Text="Açıklama:" />
                    </div>
                    <div class="col-md-10">
                        <RadzenTextArea Rows="5" class="w-100" @bind-Value="UpdateGameModel.Description" />
                        <ValidationMessage For="() => UpdateGameModel.Description" />
                    </div>
                </div>

                <div class="row mb-2">
                    <div class="col-md-2">
                        <RadzenLabel Text="Yayın Tarihi:" />
                    </div>
                    <div class="col-md-10">
                        <RadzenDatePicker class="w-100" TValue="DateTime" @bind-Value="UpdateGameModel.ReleaseDate" DateFormat="dd.MM.yyyy HH:mm" />
                        <ValidationMessage For="() => UpdateGameModel.ReleaseDate" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <RadzenButton ButtonType="ButtonType.Submit" Text="Kaydet" Style="margin-bottom: 10px; width: 150px" Visible="@(IsLoading == false)" />
                        <RadzenButton Click="@((args) => DialogService.Close(false))" ButtonStyle="ButtonStyle.Secondary" Text="İptal" Style="margin-bottom: 10px; width: 150px" />
                    </div>
                </div>
            </EditForm>
        }
    </Loading>
</AuthorizeArea>

@code {
    [Parameter] public Guid GameId { get; set; }
    Dictionary<Guid, string> categories;
    UpdateGameModel UpdateGameModel;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        categories = (await CategoryODataService.GetListAsync(new ODataRequestParams
        {
            Select = "Id,Name"
        })).Value.ToDictionary(k => k.Id, v => v.Name);

        var result = await GameService.GetAsync<GameModel>(GameId);

        if (result.Data == null)
        {
            NotificationService.Error(result.Message);
            return;
        }

        UpdateGameModel = Mapper.Map<UpdateGameModel>(result.Data);

        IsLoading = false;

    }

    private async Task OpenFileDialogAsync()
    {
        //var result = await DialogService.OpenAsync<MediaDialog<File>>("Resim Seç",
        //    new Dictionary<string, object> { { "Node", "game-cover-images" } },
        //    new DialogOptions { Width = "800px" });

        //if (result != null)
        //    UpdateGameModel.CoverImage = result as File;
    }


    private async Task SaveAsync()
    {
        IsLoading = true;

        var result = await GameService.UpdateAsync(UpdateGameModel);

        if (!result.Success)
            NotificationService.Error(result.Message);
        else
        {
            NotificationService.Success(result.Message);
            DialogService.Close(DialogResult.Refresh);
        }

        IsLoading = false;
    }
}
