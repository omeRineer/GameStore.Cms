
@switch (ValueType)
{
    case InputType.Text:
        {
            <RadzenTextBox Disabled="Disabled" class="w-100" Change="(args => ValueChange(args))" />
        }
        break;

    case InputType.Number:
        {
            <RadzenNumeric Disabled="Disabled" class="w-100" TValue="int" Change="(args => ValueChange(args))" />
        }
        break;

    case InputType.Decimal:
        {
            <RadzenNumeric Disabled="Disabled" class="w-100" TValue="double" Change="(args => ValueChange(args))" />
        }
        break;

    case InputType.Bool:
        {
            <RadzenCheckBox class="h-100 w-100" Disabled="Disabled" TValue="bool" Change="(args => ValueChange(args))" />
        }
        break;

    default:
        {
            <RadzenTextBox Disabled="Disabled" class="w-100" Change="(args => ValueChange(args))" />
        }
        break;
}

@code {
    [Parameter] public object Value { get; set; }
    [Parameter] public InputType ValueType { get; set; }
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public EventCallback<object> ValueChanged { get; set; }

    async Task ValueChange(object item)
    {
        Value = item;
        await ValueChanged.InvokeAsync(Value);
    }
}
