@inherits BaseDialog
@inject MaterialconService MaterialconService


<div class="row align-items-center mb-3 g-3">
    <div class="col-auto fw-bold">
        Seçilen:
    </div>

    <div class="col-auto">
        <RadzenIcon Icon="@SelectedIcon" Style="font-size: 32px;" />
    </div>

    <div class="col-auto">
        <RadzenButton Click="@((args) => DialogService.Close(SelectedIcon))"
                      Style="margin-bottom: 10px; width: 150px"
                      Visible="@(IsLoading == false)"
                      Text="Kaydet" />

        <RadzenButton Click="@((args) => DialogService.Close(false))"
                      ButtonStyle="ButtonStyle.Secondary"
                      Text="İptal"
                      Style="margin-bottom: 10px; width: 150px" />
    </div>
</div>

<RadzenCard Style="overflow-y: auto; padding: 1rem; height:85%">
    <div class="icon-grid">
        @if (Icons != null)
        {
            @foreach (var icon in Icons)
            {
                bool isSelected = icon.Key == SelectedIcon;

                <div class="icon-box @(isSelected ? "selected" : "")" @onclick="() => SelectIconAsync(icon.Key)">
                    <RadzenIcon Icon="@icon.Key" Style="font-size: 2rem;" />
                </div>
            }
        }
    </div>
</RadzenCard>

<style>
    .icon-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .icon-box {
        height: 10%;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #ccc;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
    }

        .icon-box:hover {
            background-color: #f5f5f5;
        }

        .icon-box.selected {
            border: 2px solid #007bff;
            background-color: #e7f1ff;
        }
</style>

@code {
    List<KeyValuePair<string, string>>? Icons;
    string? SelectedIcon;

    protected async override Task OnInitializedAsync()
    {
        Icons = await MaterialconService.GetIcons();
    }

    async Task SelectIconAsync(string icon)
    {
        SelectedIcon = icon;
    }
}
